{"version":3,"sources":["webpack:///./src/views/Sankey.vue?def4","webpack:///src/views/Sankey.vue","webpack:///./src/views/Sankey.vue?2df1","webpack:///./src/views/Sankey.vue","webpack:///./node_modules/core-js/internals/create-html.js","webpack:///./node_modules/core-js/modules/es.string.link.js","webpack:///./node_modules/core-js/internals/string-html-forced.js","webpack:///./node_modules/core-js/modules/es.function.name.js"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","data","nodes","links","year","idDes","formulaAlias","ansd","ques","figures","variables","references","constants_calculated","loaded","methods","getAnswerValues","getQuestions","getAliasFormula","getRefValue","getCalculated","simpleCalculated","component","requireObjectCoercible","toString","quot","module","exports","string","tag","attribute","value","S","p1","replace","$","createHTML","forcedStringHTMLMethod","target","proto","forced","link","url","fails","METHOD_NAME","test","toLowerCase","split","length","DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","nameRE","NAME","configurable","get","call","match","error"],"mappings":"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","file":"js/chunk-3ace2104.e4711599.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"wrap\"},[_c('div',{attrs:{\"id\":\"chart\"}})])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container\">\r\n    <div class=\"wrap\">\r\n      <div id=\"chart\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      nodes:[],\r\n      links:[],\r\n      year: null,\r\n      idDes: null,\r\n      formulaAlias:[],\r\n      ansd: [],\r\n      ques: [],\r\n      figures: [],\r\n      variables: [],\r\n      references: [],\r\n      constants_calculated: {\r\n          table: 'REG_TAB',\r\n          sum: 'SUMATORIA',\r\n          simple: 'CALC_SIMPLE',\r\n          compose: 'CALC_COMPUESTO',\r\n          equal:  'IGUAL'\r\n      },\r\n      loaded: false\r\n    }\r\n  },\r\n  async mounted(){\r\n    this.year =  localStorage.getItem('year');\r\n    this.idDes =  localStorage.getItem('id_territorio');\r\n    this.$store.dispatch('setLoading')\r\n    try{\r\n        var val5 = await window.eel.getQuestion()(val5)\r\n        this.ques = JSON.parse(val5)\r\n        this.$store.dispatch('clearLoading')\r\n    } catch (error) {\r\n        console.log(error)\r\n        this.$store.dispatch('clearLoading')\r\n    }\r\n\r\n    this.$store.dispatch('setLoading')\r\n    try{\r\n        var val6 = await window.eel.getAnswerUserD( this.year, this.idDes)(val6)\r\n        this.ansd = JSON.parse(val6)\r\n        if(this.ansd == null) this.ansd = []\r\n        this.$store.dispatch('clearLoading')\r\n    } catch (error) {\r\n        console.log(error)\r\n        this.$store.dispatch('clearLoading')\r\n    }\r\n\r\n    this.$store.dispatch('setLoading')\r\n    try{\r\n        var val7 = await window.eel.getVariables()(val7)\r\n        this.variables = JSON.parse(val7)\r\n        this.$store.dispatch('clearLoading')\r\n    } catch (error) {\r\n        console.log(error)\r\n        this.isLoad=true\r\n        this.$store.dispatch('clearLoading')\r\n    }\r\n\r\n    this.$store.dispatch('setLoading')\r\n    try{\r\n        var val2 = await window.eel.getFormulaByAlias()(val2)\r\n        this.formulaAlias = JSON.parse(val2)\r\n        this.$store.dispatch('clearLoading')\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n        this.$store.dispatch('clearLoading')\r\n    }\r\n    \r\n\r\n    this.$store.dispatch('setLoading')\r\n    try{\r\n        var val10 = await window.eel.getReferences(this.year, this.idDes)(val10)\r\n        this.references = JSON.parse(val10)\r\n        this.$store.dispatch('clearLoading')\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n        this.$store.dispatch('clearLoading')\r\n    }\r\n    this.loadSakey()   \r\n  },\r\n  methods: {\r\n    async loadSakey(){\r\n      this.$store.dispatch('setLoading')\r\n      try{\r\n        var val = await window.eel.getSankeyNodes()(val)\r\n        this.nodes = JSON.parse(val)\r\n\r\n        setTimeout( async ()=>{ \r\n          try{\r\n            var val2 = await window.eel.getSankeyLinks()(val2)\r\n            this.links = JSON.parse(val2)\r\n\r\n            var margin = {top: 1, right: 1, bottom: 6, left: 1},\r\n            width = 960 - margin.left - margin.right,\r\n            height = 500 - margin.top - margin.bottom;\r\n\r\n            var formatNumber = d3.format(\",.0f\"),\r\n                format = function(d) { return formatNumber(d) + \" TWh\"; },\r\n                color = d3.scale.category20();\r\n\r\n            var svg = d3.select(\"#chart\").append(\"svg\")\r\n                .attr(\"width\", width + margin.left + margin.right)\r\n                .attr(\"height\", height + margin.top + margin.bottom)\r\n              .append(\"g\")\r\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n            var sankey = d3.sankey()\r\n                .nodeWidth(15)\r\n                .nodePadding(10)\r\n                .size([width, height]);\r\n\r\n            var path = sankey.link();\r\n\r\n            let nod = []\r\n            let lin = []\r\n\r\n            for (let i = 0; i < this.nodes.length; i++) {\r\n              nod.push({\r\n                \"name\" : this.nodes[i]['ETIQUETA']\r\n              })\r\n              \r\n            }\r\n\r\n            for (let i = 0; i < this.links.length; i++) {\r\n              let valueCal =  this.getCalculated(this.links[i]['ID_FORMULA'])\r\n              lin.push({\r\n                \"source\" : this.links[i]['NODO_O'],\r\n                \"target\" : this.links[i]['NODOD'],\r\n                \"value\": isNaN(valueCal) ? 1 : valueCal\r\n              })\r\n              \r\n            }\r\n\r\n            var my_sankey = {\"nodes\": nod,\r\n            \"links\" : lin};\r\n            console.log(my_sankey)\r\n            sankey\r\n                .nodes(my_sankey.nodes)\r\n                .links(my_sankey.links)\r\n                .layout(32);\r\n\r\n            var link = svg.append(\"g\").selectAll(\".link\")\r\n                .data(my_sankey.links)\r\n              .enter().append(\"path\")\r\n                .attr(\"class\", \"link\")\r\n                .attr(\"d\", path)\r\n                .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\r\n                .sort(function(a, b) { return b.dy - a.dy; });\r\n\r\n            link.append(\"title\")\r\n                .text(function(d) { return d.source.name + \" → \" + d.target.name + \"\\n\" + format(d.value); });\r\n\r\n            var node = svg.append(\"g\").selectAll(\".node\")\r\n                .data(my_sankey.nodes)\r\n              .enter().append(\"g\")\r\n                .attr(\"class\", \"node\")\r\n                .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\r\n              .call(d3.behavior.drag()\r\n                .origin(function(d) { return d; })\r\n                .on(\"dragstart\", function() { this.parentNode.appendChild(this); })\r\n                .on(\"drag\", dragmove));\r\n\r\n            node.append(\"rect\")\r\n                .attr(\"height\", function(d) { return d.dy; })\r\n                .attr(\"width\", sankey.nodeWidth())\r\n                .style(\"fill\", function(d) { return d.color = color(d.name.replace(/ .*/, \"\")); })\r\n                .style(\"stroke\", function(d) { return d3.rgb(d.color).darker(2); })\r\n              .append(\"title\")\r\n                .text(function(d) { return d.name + \"\\n\" + format(d.value); });\r\n\r\n            node.append(\"text\")\r\n                .attr(\"x\", -6)\r\n                .attr(\"y\", function(d) { return d.dy / 2; })\r\n                .attr(\"dy\", \".35em\")\r\n                .attr(\"text-anchor\", \"end\")\r\n                .attr(\"transform\", null)\r\n                .text(function(d) { return d.name; })\r\n              .filter(function(d) { return d.x < width / 2; })\r\n                .attr(\"x\", 6 + sankey.nodeWidth())\r\n                .attr(\"text-anchor\", \"start\");\r\n\r\n            function dragmove(d) {\r\n              d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + \")\");\r\n              sankey.relayout();\r\n              link.attr(\"d\", path);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n          }\r\n          catch(error){\r\n              console.log(error)\r\n              console.log('in index')\r\n          }\r\n        }, 500);\r\n        this.$store.dispatch('clearLoading')\r\n      }\r\n      catch(error){\r\n          console.log(error)\r\n          console.log('in index ')\r\n          this.$store.dispatch('clearLoading')\r\n      }\r\n    },\r\n\r\n\r\n    getAnswerValues(id){\r\n        let ans = this.ansd.filter(e=>{ return e.id_pregunta == parseInt(id) })[0]\r\n        /* for (let i = 0; i < this.ansd.length; i++) {\r\n            if(this.ansd[i].id_pregunta == parseInt(id)) ans = this.ansd[i]\r\n        } */\r\n        return ans\r\n        \r\n    },\r\n    getQuestions(id){\r\n        let ques = this.ques.filter(e=>{ return e['ID_PREGUNTA'] == parseInt(id) })[0]\r\n        /* for (let i = 0; i < this.ques.length; i++) {\r\n            if(this.ques[i]['ID_PREGUNTA'] == parseInt(id)) ques = this.ques[i]\r\n        } */\r\n        return ques\r\n    },\r\n    getAliasFormula(alias){\r\n        return this.formulaAlias.filter(e=>{\r\n            return e.alias == alias\r\n        })[0]\r\n    },\r\n    getRefValue(ref){\r\n        return this.references.filter(e=>{\r\n            return e['ID_REFERENCIA'] == ref\r\n        })[0]\r\n    },\r\n    getCalculated(formula){\r\n        if(formula == undefined) return 0\r\n        if(formula.length<1){\r\n            return 0\r\n        }\r\n        else{\r\n            //console.log(formula.tipo)\r\n            if(formula.tipo == this.constants_calculated.sum){\r\n                let idOList = formula['CPO'].split(\";\")\r\n                let values =[]\r\n                console.log('________________')\r\n                for (let i = 0; i < idOList.length; i++) {\r\n                    let idO = idOList[i].split(\"&\")[1]\r\n                    let answer = this.getAnswerValues(parseInt(idO))\r\n                    console.log('answer with id'+ idO +': '+ JSON.stringify(answer) )\r\n                    if(answer != undefined) {\r\n                        if(answer['dato_text'] != null && answer['dato_text'] != undefined && answer['dato_text'] != '' ){\r\n                            values.push(parseFloat(answer['dato_text']))\r\n                            console.log('Val text '+ i + ': '+ parseFloat(answer['dato_text']))\r\n                        }\r\n                        else if( answer['dato_calc1'] != null && answer['dato_calc1'] != undefined && answer['dato_calc1'] != ''){\r\n                            values.push(parseFloat(answer['dato_calc1']))\r\n                            console.log('Val calc '+ i + ': '+ answer['dato_calc1'] + ',  parsed: '+ parseFloat(answer['dato_calc1']))\r\n                        }\r\n                        else{\r\n                            values.push(0)\r\n                            console.log('Val null '+ i + ': '+ 0)\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                let sum = values.reduce((a, b) => a + b, 0)\r\n                console.log(sum)\r\n                return sum\r\n            }\r\n            if(formula.tipo == this.constants_calculated.simple){\r\n                let value = this.simpleCalculated(formula)\r\n                console.log(value)\r\n                return value\r\n            }\r\n            if(formula.tipo == this.constants_calculated.compose){\r\n                let value = this.simpleCalculated(formula)\r\n                console.log(value)\r\n                return value\r\n            }\r\n            if(formula.tipo == this.constants_calculated.equal){\r\n                let value = this.simpleCalculated(formula)\r\n                console.log(value)\r\n                return value\r\n            }\r\n        }\r\n    },\r\n    simpleCalculated(formula){\r\n        var CPOType = \"NA\"\r\n        var CPO2Type = \"NA\"\r\n        //console.log(formula)\r\n        if(formula['CPO'].indexOf(\"&\") != -1)  CPOType = \"ID\"\r\n        if(formula['CPO'].indexOf(\"#\") != -1)  CPOType = \"VAR\"\r\n        if(formula['CPO'].indexOf(\"!\") != -1)  CPOType = \"ALIAS\"\r\n        if(formula['CPO'].indexOf(\"[\") != -1)  CPOType = \"CONST\"\r\n        if(formula['CPO'].indexOf(\"?\") != -1)  CPOType = \"REF\"\r\n\r\n        if(formula['CPO2'].indexOf(\"&\") != -1)  CPO2Type = \"ID\"\r\n        if(formula['CPO2'].indexOf(\"#\") != -1)  CPO2Type = \"VAR\"\r\n        if(formula['CPO2'].indexOf(\"!\") != -1)  CPO2Type = \"ALIAS\"\r\n        if(formula['CPO2'].indexOf(\"[\") != -1)  CPO2Type = \"CONST\"\r\n        if(formula['CPO2'].indexOf(\"?\") != -1)  CPO2Type = \"REF\"\r\n\r\n        let val1, val2\r\n        var operators = {\r\n            '+': function(a, b) { return a + b },\r\n            '-': function(a, b) { return a - b },\r\n            '/': function(a, b) { return a / b },\r\n            '*': function(a, b) { return a * b },\r\n            'IGUAL': function(a, b) { \r\n                b = 0\r\n                return a + b\r\n            }\r\n        };\r\n\r\n        //get Val1 CPO\r\n        \r\n        if(CPOType == \"ID\") {\r\n            let idO = formula['CPO'].split(\"&\")[1]\r\n            let answer = this.getAnswerValues(parseInt(idO))\r\n            let questionType1 = this.getQuestions(parseInt(idO))\r\n            /*  console.log(answer)\r\n            console.log(questionType1) */\r\n            if(questionType1 != undefined){\r\n                if(questionType1['TIPO_1'] == 'abierto numero'){\r\n                    if(answer != undefined) {\r\n                        if(answer['dato_text'] != null && answer['dato_text'] != undefined && answer['dato_text'] != '' ){\r\n                            val1 = parseFloat(answer['dato_text'])\r\n                        }\r\n                        else{\r\n                            val1 = 0\r\n                        }\r\n                    }\r\n                }\r\n                else if(questionType1['TIPO_1'] == 'calculado'){\r\n                    if(answer != undefined) {\r\n                        if(answer['dato_calc1'] != null && answer['dato_calc1'] != undefined && answer['dato_calc1'] != '' ){\r\n                            val1 = parseFloat(answer['dato_calc1'])\r\n                        }\r\n                        else{\r\n                            val1 = 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(CPOType == \"VAR\") {\r\n            let varO = this.variables.filter(e=>{return e['NOMBRE'] == formula['CPO']})[0]\r\n            if(varO != undefined) {\r\n                val1 = varO['VALOR']\r\n            }\r\n            else{\r\n                val1 = varO['VALOR']\r\n            }   \r\n        }\r\n        else if(CPOType == \"ALIAS\") {\r\n            let formulaX = this.getAliasFormula(formula['CPO'])\r\n            if(formulaX != undefined)\r\n                val1 = this.getCalculated(formulaX)\r\n        }\r\n        else if(CPOType == \"CONST\") {\r\n            let idO = formula['CPO'].split(\"[\")[1]\r\n            let idO3 = idO.split(\"]\")[0]\r\n            val1 = parseFloat(idO3.replace(\",\",\".\"))\r\n        }\r\n        else if(CPOType == \"REF\"){\r\n            let idO = formula['CPO'].split(\"?\")[1]\r\n            let valu = this.getRefValue(idO)\r\n            if (valu != undefined){\r\n                val1 = parseFloat(valu['DATA'])\r\n            }\r\n        }\r\n\r\n        //get Val2 CPO2\r\n\r\n        if(CPO2Type == \"ID\") {\r\n            let idO2 = formula['CPO2'].split(\"&\")[1]\r\n            let answer = this.getAnswerValues(parseInt(idO2))\r\n            let questionType1 = this.getQuestions(parseInt(idO2))\r\n            /* console.log(answer)\r\n            console.log(questionType1) */\r\n            if(questionType1 != undefined){\r\n                if(questionType1['TIPO_1'] == 'abierto numero'){\r\n                    if(answer != undefined) {\r\n                        if(answer['dato_text'] != null && answer['dato_text'] != undefined && answer['dato_text'] != '' ){\r\n                            val2 = parseFloat(answer['dato_text'])\r\n                        }\r\n                        else{\r\n                            val2 = 0\r\n                        }\r\n                    }\r\n                }\r\n                else if(questionType1['TIPO_1'] == 'calculado'){\r\n                    if(answer != undefined) {\r\n                        if(answer['dato_calc1'] != null && answer['dato_calc1'] != undefined && answer['dato_calc1'] != '' ){\r\n                            val2 = parseFloat(answer['dato_calc1'])\r\n                        }\r\n                        else{\r\n                            val2 = 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(CPO2Type == \"VAR\") {\r\n            //console.log(formula['CPO2'])\r\n            //console.log(this.variables)\r\n            let varO2 = this.variables.filter(e=>{return e['NOMBRE'] == formula['CPO2']})[0]\r\n            //console.log(varO2)\r\n            if(varO2 != undefined) {\r\n                val2 = varO2['VALOR']\r\n            }\r\n            else{\r\n                val2 = varO2['VALOR']\r\n            }\r\n        }\r\n        else if(CPO2Type == \"ALIAS\") {\r\n            let formulaX = this.getAliasFormula(formula['CPO2'])\r\n            if(formulaX != undefined)\r\n                val2 = this.getCalculated(formulaX)\r\n        }\r\n        else if(CPO2Type == \"CONST\") {\r\n            let idO2 = formula['CPO2'].split(\"[\")[1]\r\n            let idO23 = idO2.split(\"]\")[0]\r\n            val2 = parseFloat(idO23.replace(\",\",\".\"))\r\n        }\r\n        else if(CPO2Type == \"REF\"){\r\n            let idO2 = formula['CPO2'].split(\"?\")[1]\r\n            let valu = this.getRefValue(idO2)\r\n            //console.log(valu)\r\n            if (valu != undefined){\r\n                val2 = parseFloat(valu['DATA'])\r\n            }\r\n            \r\n        }\r\n        //console.log(this.questions[i]['COD_PREGUNTA'])\r\n        if( formula.tipo == this.constants_calculated.compose){\r\n            /* console.log('______________________________________________________________________')\r\n            console.log('CPD: '+formula['CPD'])\r\n            console.log(val1 + formula['OP'] + val2 + \"=\" + operators[formula['OP']](val1,val2))\r\n            console.log('CPO: '+formula['CPO']+' - '+CPOType)\r\n            console.log('CPO2: '+formula['CPO2']+' - '+CPO2Type)\r\n            console.log('ALIAS: '+formula['alias']) */\r\n        }\r\n        console.log(JSON.stringify(formula))\r\n        console.log(formula['OP'])\r\n        return operators[formula['OP']](val1,val2)\r\n\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Sankey.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Sankey.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Sankey.vue?vue&type=template&id=b3750bce&scoped=true&\"\nimport script from \"./Sankey.vue?vue&type=script&lang=js&\"\nexport * from \"./Sankey.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b3750bce\",\n  null\n  \n)\n\nexport default component.exports","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\n\nvar quot = /\"/g;\n\n// `CreateHTML` abstract operation\n// https://tc39.es/ecma262/#sec-createhtml\nmodule.exports = function (string, tag, attribute, value) {\n  var S = toString(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + toString(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.link` method\n// https://tc39.es/ecma262/#sec-string.prototype.link\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {\n  link: function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n","var fails = require('../internals/fails');\n\n// check the existence of a method, lowercase\n// of a tag and escaping quotes in arguments\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    var test = ''[METHOD_NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  });\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"],"sourceRoot":""}